{"version":3,"sources":["components/Menu.js","components/Board/QuestionBlock.js","components/TextContainer.js","addition-functions/setButtonView.js","components/Board/AnswerBlock.js","components/Board/Board.js","components/Score/Score.js","components/Game.js","components/GameOver.js","App.js","index.js"],"names":["Menu","changeGameState","className","alt","src","href","onClick","event","preventDefault","QuestionBlock","question","TextContainer","index","children","clickEvent","viewBox","xmlns","data-index","d","fill","stroke","setButtonView","button","name","classList","add","setTimeout","remove","AnswerBlock","answers","correctAnswer","setAnswer","useState","state","setState","useEffect","clickToggle","answerId","target","parentNode","querySelector","dataset","map","answer","textAnchor","x","y","String","fromCharCode","Board","title","answerNumber","Score","prices","currentLevel","price","array","length","getRandomQuestion","questions","Math","floor","random","Game","data","changeScore","score","game","setGame","prev","list","console","log","questionCount","questionPrices","GameOver","App","gameState","setGameState","setScore","setData","fetch","then","response","json","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c68f5c9e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Menu = ({ changeGameState }) => {\n  const clickToggle = (event) => {\n    event.preventDefault();\n    changeGameState(2);\n  }\n\n  return (\n    <div className=\"menu\">\n      <img\n        alt=\"hand up\"\n        className=\"menu__hand\"\n        src=\"/assets/hand.svg\"\n      />\n      <div className=\"menu__logic\">\n        <h1 className=\"menu__text\">\n          Who wants to be a&nbsp;millionaire&nbsp;?\n        </h1>\n        <a\n          href=\"/\"\n          className=\"menu__button\"\n          onClick={clickToggle}\n        >\n          Start\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Menu;","import React from 'react';\n\nconst QuestionBlock = ({ question }) => {\n  return (\n    <div className=\"question-block\">\n      <h2 className=\"question\">\n        {question}\n      </h2>\n    </div>\n  );\n};\n\nexport default QuestionBlock;","import React from 'react';\n\nconst TextContainer = ({ index, children, clickEvent }) => {\n  return (\n    <svg\n      onClick={clickEvent || null}\n      className=\"game__text-container\"\n      viewBox=\"0 0 389 72\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path data-index={index}\n        d=\"M23.8137 5.09773C25.9857 2.2033 29.3933 0.5 33.012\n        0.5H355.988C359.607 0.5 363.014 2.2033 365.186 5.09773L388.375\n        36L365.186 66.9023C363.014 69.7967 359.607 71.5 355.988\n        71.5H33.012C29.3933 71.5 25.9857 69.7967 23.8137\n        66.9023L0.625116 36L23.8137 5.09773Z\"\n        fill=\"white\"\n        stroke=\"#D0D0D8\"\n      />\n      {children}\n    </svg>\n  )\n}\n\nexport default TextContainer;","function setButtonView (button, name) {\n  if (button) {\n    button.classList.add(name);\n    setTimeout(() => {\n      button.classList.remove(name);\n    }, 3000);\n  }\n}\n\nexport default setButtonView;","import React, {useState, useEffect} from 'react';\nimport TextContainer from '../TextContainer';\nimport setButtonView from '../../addition-functions/setButtonView';\n\nconst AnswerBlock = ({ answers, correctAnswer, setAnswer }) => {\n  const [state, setState] = useState(true);\n\n  useEffect(() => {\n    setState(true);\n  }, [answers]);\n\n  if (!answers)\n    return null;\n\n  const clickToggle = (event) => {\n    if (state) {\n      setState(false);\n\n      let answerId = +event.target.parentNode.querySelector('path').dataset.index;\n\n      setButtonView(event.target.parentNode, correctAnswer === answerId ? 'correct' : 'wrong');\n      setTimeout(() => {\n        event.target.parentNode.classList.remove(correctAnswer === answerId ? 'correct' : 'wrong')\n        if (setAnswer)\n          setAnswer(answerId);\n      }, 200);\n    }\n  }\n\n  return (\n    <div className=\"answer-block\">\n      {answers.map((answer, index) =>\n        <TextContainer key={index} clickEvent={clickToggle} index={index}>\n          <text className=\"answer-number\" textAnchor=\"middle\" x=\"50\" y=\"45\">\n            {'' + String.fromCharCode(65 + index)}\n          </text>\n          <text className=\"answer-text\" x=\"70\" y=\"45\">\n            {answer}\n          </text>\n        </TextContainer>\n      )}\n    </div>\n  );\n};\n\nexport default AnswerBlock;","import React from 'react';\nimport QuestionBlock from './QuestionBlock';\nimport AnswerBlock from './AnswerBlock';\n\nconst Board = ({ question, setAnswer }) => {\n  if (!question)\n    return null;\n\n  return (\n    <div className=\"game__board\">\n      <QuestionBlock question={question.title} />\n      <AnswerBlock\n        answers={question.answers}\n        correctAnswer={question.answerNumber}\n        setAnswer={setAnswer}\n      />\n    </div>\n  );\n};\n\nexport default Board;","import React from 'react';\nimport TextContainer from '../TextContainer';\n\nconst Score = ({ prices, currentLevel }) => {\n  return (\n    <div className=\"game__score\">\n      {prices.map((price, index, array) =>\n        <div\n          key={index}\n          className={\n            (array.length - 1 - currentLevel < index && \"past\") ||\n            (array.length - 1 - currentLevel === index && \"current\") || ''\n          }\n        >\n          <TextContainer>\n            <text textAnchor=\"middle\" className=\"score-text\" x=\"50%\" y=\"45\">\n              {'$' + price}\n            </text>\n          </TextContainer>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Score;","import React, {useState, useEffect} from 'react';\nimport Board from './Board/Board';\nimport Score from './Score/Score';\n\nfunction getRandomQuestion(questions) {\n  if (!questions)\n    return null;\n  return questions[Math.floor(Math.random() * questions.length)];\n}\n\nconst Game = ({ data, changeScore, changeGameState }) => {\n  const [game, setGame] = useState({\n    currentLevel: 0,\n    score: 0,\n    question: null,\n  });\n\n  useEffect(() => {\n    setGame(prev => ({\n      ...prev,\n      question: getRandomQuestion(data.questions[0].list)\n    }))\n  }, [data]);\n\n  const getUserAnswer = (answer) => {\n    console.log(game.score);\n    if (answer !== game?.question?.answerNumber) {\n      changeScore(game.score);\n      changeGameState(3);\n    } else if (game.currentLevel === data.questionCount - 1) {\n      changeScore(data.questionPrices[data.questionCount - (game.currentLevel + 1)]);\n      changeGameState(3);\n    }\n    else {\n      setGame(prev => ({\n        ...prev,\n        currentLevel: prev.currentLevel + 1,\n        score: data.questionPrices[data.questionCount - (game.currentLevel + 1)],\n        question: getRandomQuestion(data.questions[prev.currentLevel + 1]?.list)\n      }))\n    }\n\n  }\n\n  if (!data)\n    return null;\n\n  return (\n    <div className=\"game\">\n      <Board\n        question={game.question}\n        setAnswer={getUserAnswer}\n      />\n      <Score\n        prices={data.questionPrices}\n        currentLevel={game.currentLevel}\n      />\n    </div>\n  )\n}\n\nexport default Game;","import React from 'react';\n\nconst GameOver = ({score, changeGameState}) => {\n  const clickToggle = (event) => {\n    event.preventDefault();\n    changeGameState(2);\n  };\n\n  return (\n    <div className=\"game-over\">\n      <img\n        alt=\"hand up\"\n        className=\"menu__hand\"\n        src=\"/assets/hand.svg\"\n      />\n      <div className=\"menu__logic\">\n        <div>\n          <p className=\"game-over__total\">Total&nbsp;score:</p>\n          <h1 className=\"game-over__score\">\n            ${score || '0'}&nbsp;earned\n          </h1>\n        </div>\n        <a\n          href=\"/\"\n          className=\"menu__button\"\n          onClick={clickToggle}\n        >\n          Try&nbsp;again\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default GameOver;","import React, {useState, useEffect} from 'react';\nimport Menu from './components/Menu';\nimport Game from './components/Game';\nimport './index.css';\nimport GameOver from './components/GameOver';\n\nfunction App() {\n  const [gameState, setGameState] = useState(1);\n  const [score, setScore] = useState(500);\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch('https://vkmetyk.github.io/who-wants-to-be-a-millionare/assets/data.json')\n      .then(response => response.json())\n      .then(data => setData(data))\n      // .catch(e => alert('Can not load questions :('));\n  }, []);\n\n  if (!data)\n    return null;\n\n  return (\n    <>\n      {gameState === 1 &&\n        <Menu changeGameState={setGameState} />\n      }\n      {gameState === 2 &&\n        <Game\n          data={data}\n          score={score}\n          changeScore={setScore}\n          changeGameState={setGameState}\n        />\n      }\n      {gameState === 3 &&\n        <GameOver\n          score={score}\n          changeGameState={setGameState}\n        />\n      }\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}